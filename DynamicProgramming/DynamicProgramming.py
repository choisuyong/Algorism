# 메모리를 적절히 사용하여 수행시간 효율성을 비약적으로 향상시키는 방법
# 이미 계산된 결과는 별도의 메모리 영역에 저장하여 다시 계산하지 않도록 하는것
# 일반적으로 탑다운 / 바텀 업

# 이하의 경우를 만족하는 경우에 사용가능
# 최적 부분구조 : 큰 문제를 작은 문제를 나눌 수 있으며 작은 문제의 답을 모아 큰 문제를 해결할 수 있는경우
# 중복되는 부분문제 : 동일한 작은 문제를 반복적으로 해결해야할때

# 피보나치 수열
def fibo(x) :
    if x == 1 or x ==2 :
        return 1
    return fibo(x-1) + fibo(x-2)

print(fibo(4))        

# 시간복잡도가 높기에 다음의 방법을 통해 해결
# 메모이제이션 : 계산한 결과를 메모리 공간에 메모하는 기법

d = [0] * 100
def fibo_dy(x) :
    if x == 1 or x == 2 :
        return 1
    if d[x] != 0  :
        return d[x]
    d[x] = fibo_dy(x-1) + fibo_dy(x-2)
    return d[x]

print(fibo_dy(99))